generator client {
  provider = "prisma-client-js"
  seed     = "ts-node prisma/seed.ts"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id               String            @id @default(uuid())
  address          String            @unique
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  purchases        Purchase[]
  purchaseAttempts PurchaseAttempt[]
  xAccount         XAcount?
}

model Product {
  id               String            @id @default(uuid())
  name             String            @unique
  stock            Int
  history          Purchase[]
  purchaseAttempts PurchaseAttempt[]
}

model Purchase {
  id        String   @id @default(uuid())
  userId    String
  txHash    String
  productId String
  quantity  Int
  totalCost Float
  createdAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

model PurchaseAttempt {
  id           String   @id @default(uuid())
  userId       String
  productId    String
  attemptedAt  DateTime @default(now())
  successful   Boolean
  amount       Float
  dollarAmount Float
  stripeId     String?
  product      Product  @relation(fields: [productId], references: [id])
  user         User     @relation(fields: [userId], references: [id])
}

model Wallet {
  id            String @id @default(uuid())
  name          String @unique
  encryptedSeed String
}

model Newsletter {
  id    String @id @default(uuid())
  email String @unique
}

model XAcount {
  id                String @id @default(uuid())
  xid               String @unique
  username          String @unique
  name              String @unique
  profile_image_url String @unique
  userId            String @unique
  user              User   @relation(fields: [userId], references: [id])
}
